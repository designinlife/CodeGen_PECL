Braindump
---------

create seperate target dir for copied spec files

copy <changelog> to generated package.xml

allow addition of files to directories (eg. test),
allow specification of file role instead of guessing by extension?

support compiler/linker flags setting using config programs
like pkg-config, mysql_config etc.

add configure test code within DATA section of <lib> and <header> tags?
e.g. for version checking?

<lib> shared=no 
  -> drop EXTNAME_SHARED_LIBADD parameter to PHP_ADD_LIBRARY_WITH_PATH
	=> requires further research, doesn't work this way
	==> how to add *static* libraries? 

check whether multiple logos work

- check #line numbers in generated source with libxml
  -> error messages with meaningfull line numbers need this


Milestone 0.9
-------------

- <lib> and <header> tags *within* <with>...</with>  -> in progress
  => parsing ok now, needs config.m4 output tweaks

- rewrite the function prototype parser
  - object type specification (as in resources)      -> done
  - default values                                   -> done
  - 'void' treatment                                 -> done
  - '...' not handled                                -> done
  - array() as default value                         -> done
  - code generation for 'pass by refecence'          -> only for zval based types yet
  - '...' code generation                            -> only if first parameter yet
  - return by reference (for 5.1)                    -> not done yet   

- allow "src='path/to/file'" in more cases           -> needs checking

FREE_RESOURCE macro                                  -> done

allow defined PHP constants as default value         -> done

<define> tag -> #define + <constant>?                -> done by define attribute to <constant>

allow for embedded base64 or uu encoded logo specs   -> done

changeable function prefix?                          -> done

trick parser to verbatim pass on docbook contentent  -> done

add configure compile test for <resource>  to check  -> done
whether a given payload is a valid type?

SYSTEM Entity and XInclude support                   -> done 

support for multiple <with> tags with distinct 
names, name defaults to extension name if not given  -> done

added version attribute to <extension>
to control parser features (replaces -x switch)      -> done

support <?code ... ?> as alternative to CDATA        -> done 

check whether <header> checks work                   -> done

test files are not yet added to package.xml          -> done

Milestone 1.0
-------------

- support new win32 configure files              -> partly done (75%?)

- test suite                                     -> partly done, not automized yet 

- class implementation and documentation support 
 
  - <class>                                      -> done
  - <class extends="..."                         -> done
  - <class><implements interface="..."           -> done
  - <class><const>                               -> done
  - <class><property ...                         -> done
  - <class><function ...                         -> done
  - constructor, destructor, other specials      -> missing
  - <interface>                                  -> missing
  - <exception>                                  -> missing
  - type hints                                   -> missing

- full support for stream wrappers and filters   -> started

- full support for .phpt test case generation    -> done 

  - <skipif>,<ini> in <function>                 -> done

- support for new package.xml format             -> not done yet

- support extension dependencies                 -> done

- some clever mechanism to ease e.g. property    -> not done yet
  access within classes? i'm afraid C prepro
  macros won't do the trick there ...



not necessarily 1.0
-------------------

- VC++ 7 (VS.net) project files
  => not needed anymore as we now have config.w32?

- have different levels of comment (and code?) generation
  similar to --no-help in ext_skel

- protos

  - option for 'old style' parameter parsing code generation ?
    (less readable but faster and more flexible)
    also needed if '...' is not the only parameter
    unless parse_params_ex with ZEND_PARSE_PARAMS_QUIET fills params anyway??


 
