milestone 1.1
-------------

- fix OS deps entries in package.xml (done)

- implement pass-by-reference for array and mixed parameters (done)

- allow addition of files to directories (eg. test) (done)

- finish config.w32 generation (~75% done, need someone 
  with windows build experience to finish and test this,
  probably at php|tek if not earlier)

- check #line numbers in generated source with libxml
  -> error messages with meaningfull line numbers need this

- return by reference (for 5.1 if it supports it)          

- fix pass by reference for array/mixed

  

not necessarily 1.1
-------------------

- implement pass-by-reference for all parameter types

- setter/getter code for properties

- package2.xml <installdeps>               

- add more tests

- allow "src='path/to/file'" in more cases           
  make sure it generates #line, too


- postprocess code with indent if available?


- add configure test code within DATA section of <lib> and <header> tags?
  e.g. for version checking?

- full support for stream wrappers and filters   -> started

- full support for session handler API -> started

- full support for SAPI 

- have different levels of comment (and code?) generation
  similar to --no-help in ext_skel

- protos

  - option for 'old style' parameter parsing code generation ?
    (less readable but faster and more flexible)
    also needed if '...' is not the only parameter
    unless parse_params_ex with ZEND_PARSE_PARAMS_QUIET fills params anyway??

- create seperate target dir for copied spec files

  - extended Makefile rules to regenerate stuff from embedded XML specs

- allow specification of file role instead of guessing by extension?

- support compiler/linker flags setting using config programs
  like pkg-config, mysql_config etc.

- <lib> shared=no 
  -> drop EXTNAME_SHARED_LIBADD parameter to PHP_ADD_LIBRARY_WITH_PATH
	=> requires further research, doesn't work this way
	==> how to add *static* libraries? 

- improve $dirpath handling (?)

- add "if" attribute to element tags, to genereate code wrappers like

    #ifdef HAVE_SOME_FEATURE
      ...
    #endif
    